#include<iostream>
using namespace std;
#define INF 0x3f3f3f3f
double res[10];
double maxres=1052.8;
int re[2];
double sum=0;
double a[10]= {120,73,180,80,125,125,81.1,90}; //第i个机的当前出力值
double b[][10]= { //段融量
	{70,0,50,0,0,30,0,0,0,40},
	{30,0,20,8,15,6,2,0,0,8},
	{110,0,40,0,30,0,20,40,0,40},
	{55,5,10,10,10,10,15,0,0,1},
	{75,5,15,0,15,15,0,10,10,10},
	{95,0,10,20,0,15,10,20,0,10},
	{50,15,5,15,10,10,5,10,3,2},
	{70,0,20,0,20,0,20,10,15,5},
};


/*
-505,	0,	 124,	168,	210,	252,	312,	330,	363,	489
-560,	0,	 182,	203,	245,	300,	320,	360,	410,	495
-610,	0,	 152,	189,	233,	258,	308,	356,	415,	500
-500,	150, 170,	200,	255,	302,	325,	380,	435,	800
-590,	0,	 116,	146,	188,	215,	250,	310,	396,	510
-607,	0,	 159,	173,	205,	252,	305,	380,	405,	520
-500,	120, 180,	251,	260,	306,	315,	335,	348,	548
-800,	153, 183,	233,	253,	283,	303,	318,	400,	800
*/
double c[][10] {//段价 
	{-505,	0,	 124,	168,	210,	252,	312,	330,	363,	489},
	{-560,	0,	 182,	203,	245,	300,	320,	360,	410,	495},
	{-610,	0,	 152,	189,	233,	258,	308,	356,	415,	500},
	{-500,	150, 170,	200,	255,	302,	325,	380,	435,	800},
	{-590,	0,	 116,	146,	188,	215,	250,	310,	396,	510},
	{-607,	0,	 159,	173,	205,	252,	305,	380,	405,	520},
	{-500,	120, 180,	251,	260,	306,	315,	335,	348,	548},
	{-800,	153, 183,	233,	253,	283,	303,	318,	400,	800}
};
double v[8]={2.2,	1,	3.2,	1.3,	1.8,	2,	1.4,	1.8};
bool vis[8][10];
void init() {
	re[0]=0;
	re[1]=0;
	for(int i=0;i<8;++i){
		res[i]=0;
	}
	for(int i=0;i<8;++i){
		for(int j=0;j<10;++j){
			vis[i][j]=0;
		}
	}
}
int *findmin(){//从段价中找到最小的 
	re[0]=-1;
	re[1]=-1;
	double maxx=INF;
	for(int i=0;i<8;++i){
		for(int j=0;j<10;++j){
			if(c[i][j]<maxx&&vis[i][j]==0){
				maxx=c[i][j];
				re[0]=i;
				re[1]=j;
			}else if(c[i][j]==maxx&&vis[i][j]==0){
				if(b[i][j]>b[re[0]][re[1]]){
					maxx=c[i][j];
					re[0]=i;
					re[1]=j;
				}
				
			}
		}
	}
	vis[re[0]][re[1]]=1;
	return re;
}
void add(int x,int y){
	if(x!=-1&&y!=-1){
		if( res[x] < (a[x]+v[x]*15)){//是否小于极限 
			if((res[x]+b[x][y]) <= (a[x]+v[x]*15)){
				res[x]=res[x]+b[x][y];
				sum+=b[x][y];
			}else if((res[x]+b[x][y]) > (a[x]+v[x]*15)){//如果有多余    110 + 20   >117  --> 110+=117-110; 
				sum+=(a[x]+v[x]*15)-res[x];
				res[x]+=(a[x]+v[x]*15)-res[x];//减去多余的 
			}
		}		
		if(sum>maxres){
			cout<<"清算价："<<c[x][y]<<endl; 
			res[x]=res[x]-(sum-maxres);
			sum=maxres;
		}
	}
}
bool isend(){

	return sum>=maxres;
}
int main() {
	init();
	


	while(isend()==false){
		int *tre=findmin();
		int x=tre[0];
		int y=tre[1];
//		cout<<"x="<<x<<" y="<<y;
//	if(vis[x][y]==0){
		
		add(x,y);
//	}
			
		
	}
	cout<<"\n------------------------------\n";
	for(int i=0;i<8;++i){
		cout<<res[i]<<" ";
	} 
	cout<<"\n------------------------------\n";
	return 0;
}
